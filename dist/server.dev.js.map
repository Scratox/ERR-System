{"version":3,"sources":["server.js"],"names":["express","require","bodyParser","db","app","PORT","process","env","use","set","json","urlencoded","extended","getDepartmentsRadio","req","res","next","sql","query","err","results","console","error","status","send","radioButtons","map","department","DepartmentName","locals","join","getModulesDropdown","dropdownOptions","module","ModuleName","getTeachersDropdown","teacher","TeacherName","authenticateUser","username","password","callback","length","log","user","post","body","authenticatedUser","role","redirect","get","data","render","result","stack","listen"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst db = require('./db');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 8888;\r\n\r\napp.use(express.static('public'));\r\napp.set('view engine', 'pug');\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Middleware to get departments radio buttons\r\nconst getDepartmentsRadio = (req, res, next) => {\r\n  const sql = 'SELECT DepartmentName FROM department';\r\n\r\n  db.query(sql, (err, results) => {\r\n    if (err) {\r\n      console.error('Error fetching departments:', err);\r\n      return res.status(500).send('Internal Server Error');\r\n    }\r\n\r\n    const radioButtons = results.map((department) => `\r\n      <input type=\"radio\" name=\"department\" value=\"${department.DepartmentName}\">\r\n      <label>${department.DepartmentName}</label>\r\n    `);\r\n\r\n    res.locals.getDepartmentsRadio = radioButtons.join('');\r\n    next();\r\n  });\r\n};\r\n\r\n// Middleware to get modules dropdown\r\nconst getModulesDropdown = (req, res, next) => {\r\n  const sql = 'SELECT ModuleName FROM modules';\r\n\r\n  db.query(sql, (err, results) => {\r\n    if (err) {\r\n      console.error('Error fetching modules:', err);\r\n      return res.status(500).send('Internal Server Error');\r\n    }\r\n\r\n    const dropdownOptions = results.map((module) => `\r\n      <option value=\"${module.ModuleName}\">${module.ModuleName}</option>\r\n    `);\r\n\r\n    res.locals.getModulesDropdown = `<select name=\"modules\">${dropdownOptions.join('')}</select>`;\r\n    next();\r\n  });\r\n};\r\n\r\n// Middleware to get teachers dropdown\r\nconst getTeachersDropdown = (req, res, next) => {\r\n  const sql = 'SELECT TeacherName FROM teachers';\r\n\r\n  db.query(sql, (err, results) => {\r\n    if (err) {\r\n      console.error('Error fetching teachers:', err);\r\n      return res.status(500).send('Internal Server Error');\r\n    }\r\n\r\n    const dropdownOptions = results.map((teacher) => `\r\n      <option value=\"${teacher.TeacherName}\">${teacher.TeacherName}</option>\r\n    `);\r\n\r\n    res.locals.getTeachersDropdown = `<select name=\"teachers\">${dropdownOptions.join('')}</select>`;\r\n    next();\r\n  });\r\n};\r\n\r\n// Authentication logic\r\nconst authenticateUser = (username, password, callback) => {\r\n  const sql = 'SELECT * FROM users WHERE Username = ? AND Password = ?';\r\n  db.query(sql, [username, password], (err, results) => {\r\n    if (err) {\r\n      console.error('Error during authentication:', err);\r\n      return callback(err, null);\r\n    }\r\n\r\n    if (results.length === 0) {\r\n      console.log('User not found during authentication for username:', username);\r\n      return callback(null, null);\r\n    }\r\n\r\n    const user = results[0];\r\n    console.log('User found during authentication:', user);\r\n    callback(null, user);\r\n  });\r\n};\r\n\r\n// Login route\r\napp.post('/login', (req, res) => {\r\n  const { username, password } = req.body;\r\n\r\n  authenticateUser(username, password, (err, authenticatedUser) => {\r\n    if (err) {\r\n      res.send('Error during authentication');\r\n    } else if (!authenticatedUser) {\r\n      res.send('Invalid credentials');\r\n    } else {\r\n      // Redirect based on user role\r\n      if (authenticatedUser.role === 'Student') {\r\n        res.redirect('/student');\r\n      } else if (authenticatedUser.role === 'Teacher') {\r\n        res.redirect('/teacher');\r\n      } else {\r\n        res.send('Invalid user role');\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\n// Student dashboard\r\napp.get('/student', getDepartmentsRadio, getModulesDropdown, getTeachersDropdown, (req, res) => {\r\n  // Assuming you have middleware functions to provide data for departments, modules, and teachers\r\n  const data = {\r\n    getDepartmentsRadio: res.locals.getDepartmentsRadio,\r\n    getModulesDropdown: res.locals.getModulesDropdown,\r\n    getTeachersDropdown: res.locals.getTeachersDropdown,\r\n  };\r\n  res.render('student', data);\r\n});\r\n\r\n// Teacher dashboard\r\napp.get('/teacher', (req, res) => {\r\n  db.query('SELECT * FROM problemsubmissions', (err, result) => {\r\n    if (err) {\r\n      console.error('Database query error:', err);\r\n      res.render('teacher', { result: null, error: 'Error during database query' });\r\n    } else {\r\n      res.render('teacher', { result });\r\n    }\r\n  });\r\n});\r\n\r\n// Index route\r\napp.get('/', (req, res) => {\r\n  res.render('index');\r\n});\r\n\r\n// Login route\r\napp.get('/login', (req, res) => {\r\n  res.render('login');\r\n});\r\n\r\napp.get('/submit-issue', (req, res) => {\r\n  res.render('student');\r\n});\r\n\r\n// Error handling middleware\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Something went wrong!');\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}